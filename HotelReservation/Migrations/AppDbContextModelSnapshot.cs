// <auto-generated />
using System;
using HotelReservation.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelReservation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelReservation.Domain.Entities.HotelRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PricePerNight")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RoomNumber")
                        .IsUnique();

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 4,
                            CreatedAt = new DateTime(2025, 10, 11, 17, 22, 37, 696, DateTimeKind.Local).AddTicks(5778),
                            PricePerNight = 800000,
                            RoomNumber = "101"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            CreatedAt = new DateTime(2025, 10, 11, 17, 22, 37, 696, DateTimeKind.Local).AddTicks(5783),
                            PricePerNight = 400000,
                            RoomNumber = "102"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 3,
                            CreatedAt = new DateTime(2025, 10, 11, 17, 22, 37, 696, DateTimeKind.Local).AddTicks(5784),
                            PricePerNight = 600000,
                            RoomNumber = "103"
                        });
                });

            modelBuilder.Entity("HotelReservation.Domain.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelReservation.Domain.Entities.RoomDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasAirConditioner")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWifi")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("RoomDetails");
                });

            modelBuilder.Entity("HotelReservation.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 11, 17, 22, 37, 696, DateTimeKind.Local).AddTicks(2877),
                            Password = "123",
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 11, 17, 22, 37, 696, DateTimeKind.Local).AddTicks(2891),
                            Password = "123",
                            Role = "Receptionist",
                            UserName = "reception"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 11, 17, 22, 37, 696, DateTimeKind.Local).AddTicks(2892),
                            Password = "123",
                            Role = "NormalUser",
                            UserName = "user1"
                        });
                });

            modelBuilder.Entity("HotelReservation.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("HotelReservation.Domain.Entities.HotelRoom", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HotelReservation.Domain.Entities.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelReservation.Domain.Entities.RoomDetail", b =>
                {
                    b.HasOne("HotelReservation.Domain.Entities.HotelRoom", "Room")
                        .WithOne("RoomDetails")
                        .HasForeignKey("HotelReservation.Domain.Entities.RoomDetail", "RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelReservation.Domain.Entities.HotelRoom", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("HotelReservation.Domain.Entities.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
